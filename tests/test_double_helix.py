import unittest
import sys
import os
# Add the parent directory to the sys.path
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
import graph_potential_similarity as gps

seqs = [
    "GGACCGACAGGAATTCGCTCCTTAGGACGTTATAGTTACGGCCGCCGTTTACTGGGGCTTCAATTCGCAGCTTCGCTTGCGCTAACCACTCCTCTTAACCTTCCAGCACCGGGCAGGCGTCAGCCCCTATACGTCACCTTACGGTTTTGCAGAGACCTGTGTTTTTGCTAAACAGTCGCCTGGGCCTATTCACTGCGGCTCTCATGCGCTTGCACGCTCAAGAGCACCCCTTCTCCCGAAGTTACGGGGTCATTTTGCCGAGTTCCTTAACGAGAGTTCTCTCGCACACCTTAGGATTCTCTCCTCGACTACCTGTGTCGGTTTGCGGTACGGGCACCTCTCACCTCGATAGAGGCTTTTCTTGGCAGTGTGAAATCAGGAACTTCGTCCTTAAAGGACTCGCCATCACAGCTCAACGTTACAGTGTGCGGATTTGCCTACACACACGCCTTACTGCTTGGACGCGCACAACCAACGGCGCGCTTACCCTATCCTACTGCGTCCCCCCATTTCTCAAACGGTGAGGAGGTGGTACAGGAATATCAACCTGGTTGTCCATCGCCTACGCCTATCGGCCTCGGCTTAGGTCCCGACTAACCCTGAGCGGACGAGCCCTTCCTCAGGAAACCTTAATCATACGGGGGACCGGGATTCTCACCCGTCTTTCGCTACTCATACCGGCATTCTCACTTCTAGCGCTCCACCAATCCTTCGGGCTGACTTCAAGCACTTAAAAGCTCTCCTACCACTGAAATCATAAATGTCATCCAAGCTTCGGGGATCGTTTACCCCAAAAATTTTTGGGCA",
    "AGCGAACGCTGGCGGCATGCTTAACACATGCAAGTCGCACGAAGGCTTCGGCCTTAGTGGCGGACGGGTGAGTAACGCGTAGGAATCTATCCATGGGTGGGGGATAACTCCGGGAAACTGGAGCTAATACCGCATGATACCTGAGGGTCAAAGGCGCAAGTCGCCTGTGGAGGAGCCTGCGTTTGATTAGCTTGTTGGTGGGGTAAAGGCCTACCAAGGCGATGATCAATAGCTGGTCTGAGAGGATGATCAGCCACACTGGGACTGAGACACGGCCCAGACTCCTACGGGAGGCAGCAGTGGGGAATATTGGACAATGGGGGCAACCCTGATCCAGCAATGCCGCGTGTGTGAAGAAGGTTTTCGGATTGTAAAGCACTTTCGGCGGGGACGATGATGACGGTACCCGCAGAAGAAGCCCCGGCTAACTTCGTGCCAGCAGCCGCGGTAATACGAAGGGGGCTAGCGTTGCTCGGAATGACTGGGCGTAAAGGGCGTGTAGGCGGTTTGTACAGTCAGATGTGAAATCCCCGGGCTTAACCTGGGAGCTGCATTTGATACGTGCAGACTAGAGTATGAGAGAGGGTTGTGGAATTCTCAGTGTAGAGGTGAAATTCGTAGATATTGGGAAGAACACCGGTGGCGAAGGCGGCAACCTGGCTCATTACTGACGCTGAGGCGCGAAAGCGTGGGGAGCAAACAGGATTAGATACCCTGGTAGTCCACGCTGTAAACGATGTGTGCTGGATGTTGGGTAACTTAGTTACTCAGTGTCGTAGCTAACGCGATAAGCACACCGCCTGGGGAGTACGGCCGCAAGGTTGAAACTCAAAGGAATTGACGGGGGCCCGCACAAGCGGTGGAGCATGTGGTTTAATTCGAAGCAACGCGCAGAACCTTACCAGGGCTTGTATGGAGAGGCTGTATTCAGAGATGGATATTTCCCGCAAGGGACCTCTTGCACAGGTGCTGCATGGCTGTCGTCAGCTCGTGTCGTGAGATGTTGGGTTAAGTCCCGCAACGAGCGCAACCCTTATCTTTAGTTGCCAGCATGTTTGGGTGGGCACTCTAAAGAGACTGCCGGTGACAAGCCGGAGGAAGGTGGGGATGACGTCAAGTCCTCATGGCCCTTATGTCCTGGGCTACACACGTGCTACAATGGCGGTGACAGTGGGAAGCTAGATGGCGACATCGTGCCGATCTCTAAAAACCGTCTCAGTTCGGATTGCACTCTGCAACTCGAGTGCATGAAGGTGGAATCGCTAGTAATCGCGGATCAGCATGCCGCGGTGAATACGTTCCCGGGCCTTGTACACACCGCCCGTCACACCATGGGAGTTGGTTTGACCTTAAGCCGGTGAGCGAACCGCAAGGACGCAGCCGACCACGGTCGGGTCAGCGACTGGGGTG",
    "AGCGAACGCTGGCGGCATGCTTAACACATGCAAGTCGCACGAAGGCTTCGGCCTTAGTGGCGGACGGGTGAGTAACGCGTAGGAATCTATCCATGGGTGGGGGATAACTCCGGGAAACTGGAGCTAATACCGCATGATACCTGAGGGTCAAAGGCGCAAGTCGCCTGTGGAGGAGCCTGCGTTTGATTAGCTTGTTGGTGGGGTAAAGGCCTACCAAGGCGATGATCAATAGCTGGTCTGAGAGGATGATCAGCCACACTGGGACTGAGACACGGCCCAGACTCCTACGGGAGGCAGCAGTGGGGAATATTGGACAATGGGGGCAACCCTGATCCAGCAATGCCGCGTGTGTGAAGAAGGTTTTCGGATTGTAAAGCACTTTCGGCGGGGACGATGATGACGGTACCCGCAGAAGAAGCCCCGGCTAACTTCGTGCCAGCAGCCGCGGTAATACGAAGGGGGCTAGCGTTGCTCGGAATGACTGGGCGTAAAGGGCGTGTAGGCGGTTTGTACAGTCAGATGTGAAATCCCCGGGCTTAACCTGGGAGCTGCATTTGATACGTGCAGACTAGAGTATGAGAGAGGGTTGTGGAATTCTCAGTGTAGAGGTGAAATTCGTAGATATTGGGAAGAACACCGGTGGCGAAGGCGGCAACCTGGCTCATTACTGACGCTGAGGCGCGAAAGCGTGGGGAGCAAACAGGATTAGATACCCTGGTAGTCCACGCTGTAAACGATGTGTGCTGGATGTTGGGTAACTTAGTTACTCAGTGTCGTAGCTAACGCGATAAGCACACCGCCTGGGGAGTACGGCCGCAAGGTTGAAACTCAAAGGAATTGACGGGGGCCCGCACAAGCGGTGGAGCATGTGGTTTAATTCGAAGCAACGCGCAGAACCTTACCAGGGCTTGTATGGAGAGGCTGTATTCAGAGATGGATATTTCCCGCAAGGGACCTCTTGCACAGGTGCTGCATGGCTGTCGTCAGCTCGTGTCGTGAGATGTTGGGTTAAGTCCCGCAACGAGCGCAACCCTTATCTTTAGTTGCCAGCATGTTTGGGTGGGCACTCTAAAGAGACTGCCGGTGACAAGCCGGAGGAAGGTGGGGATGACGTCAAGTCCTCATGGCCCTTATGTCCTGGGCTACACACGTGCTACAATGGCGGTGACAGTGGGAAGCTAGATGGCGACATCGTGCCGATCTCTAAAAACCGTCTCAGTTCGGATTGCACTCTGCAACTCGAGTGCATGAAGGTGGAATCGCTAGTAATCGCGGATCAGCATGCCGCGGTGAATACGTTCCCGGGCCTTGTACACACCGCCCGTCACACCATGGGAGTTGGTTTGACCTTAAGCCGGTGAGCGAACCGCAAGGACGCAGCCGACCACGGTCGGGTCAGCGACTGGGGTG",
    "TAGTGGCGGACGGGTGAGTAACGCGTAGGAATCTATCCATGGGTGGGGGATAACTCCGGGAAACTGGAGCTAATACCGCATGATACCTGAGGGTCAAAGGCGCAAGTCGCCTGTGGAGGAGCCTGCGTTTGATTAGCTTGTTGGTGGGGTAAAGGCCTACCAAGGCGATGATCAATAGCTGGTCTGAGAGGATGATCAGCCACACTGGGACTGAGACACGGCCCAGACTCCTACGGGAGGCAGCAGTGGGGAATATTGGACAATGGGGGCAACCCTGATCCAGCAATGCCGCGTGTGTGAAGAAGGTTTTCGGATTGTAAAGCACTTTCGGCGGGGACGATGATGACGGTACCCGCAGAAGAAGCCCCGGCTAACTTCGTGCCAGCAGCCGCGGTAATACGAAGGGGGCTAGCGTTGCTCGGAATGACTGGGCGTAAAGGGCGTGTAGGCGGTTTGTACAGTCAGATGTGAAATCCCCGGGCTTAACCTGGGAGCTGCATTTGATACGTGCAGACTAGAGTATGAGAGAGGGTTGTGGAATTCTCAGTGTAGAGGTGAAATTCGTAGATATTGGGAAGAACACCGGTGGCGAAGGCGGCAACCTGGCTCATTACTGACGCTGAGGCGCGAAAGCGTGGGGAGCAAACAGGATTAGATACCCTGGTAGTCCACGCTGTAAACGATGTGTGCTGGATGTTGGGTAACTTAGTTACTCAGTGTCGTAGCTAACGCGATAAGCACACCGCCTGGGGAGTACGGCCGCAAGGTTGAAACTCAAAGGAATTGACGGGGGCCCGCACAAGCGGTGGAGCATGTGGTTTAATTCGAAGCAACGCGCAGAACCTTACCAGGGCTTGTATGGAGAGGCTGTATTCAGAGATGGATATTTCCCGCAAGGGACCTCTTGCACAGGTGCTGCATGGCTGTCGTCAGCTCGTGTCGTGAGATGTTGGGTTAAGTCCCGCAACGAGCGCAACCCTTATCTTTAGTTGCCAGCATGTTTGGGTGGGCACTCTAAAGAGACTGCCGGTGACAAGCCGGAGGAAGGTGGGGATGACGTCAAGTCCTCATGGCCCTTATGTCCTGGGCTACACACGTGCTACAATGGCGGTGACAGTGGGAAGCTAGATGGCGACATCGTGCCGATCTCTAAAAACCGTCTCAGTTCGGATTGCACTCTGCAACTCGAGTGCATGAAGGTGGAATCGCTAGTAATCGCGGATCAGCATGCCGCGGTGAATACGTTCCCGGGCCTTGTACACACCGCCCGTCACACCATGGGAGTTGGTTTGACCTTAAGCCGGTGAGCGAACCGCAAGGACGCAGCCGACCACGGTCGGGTCAGCGACTGGG",
    "GTGGCGGACGGGTGAGTAACGCGTAGGAATCTATCCATGGGTGGGGGATAACTCCGGGAAACTGGAGCTAATACCGCATGATACCTGAGGGTCAAAGGCGCAAGTCGCCTGTGGAGGAGCCTGCGTTTGATTAGCTTGTTGGTGGGGTAAAGGCCTACCAAGGCGATGATCAATAGCTGGTCTGAGAGGATGATCAGCCACACTGGGACTGAGACACGGCCCAGACTCCTACGGGAGGCAGCAGTGGGGAATATTGGACAATGGGGGCAACCCTGATCCAGCAATGCCGCGTGTGTGAAGAAGGTTTTCGGATTGTAAAGCACTTTCGGCGGGGACGATGATGACGGTACCCGCAGAAGAAGCCCCGGCTAACTTCGTGCCAGCAGCCGCGGTAATACGAAGGGGGCTAGCGTTGCTCGGAATGACTGGGCGTAAAGGGCGTGTAGGCGGTTTGTACAGTCAGATGTGAAATCCCCGGGCTTAACCTGGGAGCTGCATTTGATACGTGCAGACTAGAGTATGAGAGAGGGTTGTGGAATTCTCAGTGTAGAGGTGAAATTCGTAGATATTGGGAAGAACACCGGTGGCGAAGGCGGCAACCTGGCTCATTACTGACGCTGAGGCGCGAAAGCGTGGGGAGCAAACAGGATTAGATACCCTGGTAGTCCACGCTGTAAACGATGTGTGCTGGATGTTGGGTAACTTAGTTACTCAGTGTCGTAGCTAACGCGATAAGCACACCGCCTGGGGAGTACGGCCGCAAGGTTGAAACTCAAAGGAATTGACGGGGGCCCGCACAAGCGGTGGAGCATGTGGTTTAATTCGAAGCAACGCGCAGAACCTTACCAGGGCTTGTATGGAGAGGCTGTATTCAGAGATGGATATTTCCCGCAAGGGACCTCTTGCACAGGTGCTGCATGGCTGTCGTCAGCTCGTGTCGTGAGATGTTGGGTTAAGTCCCGCAACGAGCGCAACCCTTATCTTTAGTTGCCAGCATGTTTGGGTGGGCACTCTAAAGAGACTGCCGGTGACAAGCCGGAGGAAGGTGGGGATGACGTCAAGTCCTCATGGCCCTTATGTCCTGGGCTACACACGTGCTACAATGGCGGTGACAGTGGGAAGCTAGATGGCGACATCGTGCCGATCTCTAAAAACCGTCTCAGTTCGGATTGCACTCTGCAACTCGAGTGCATGAAGGTGGAATCGCTAGTAATCGCGGATCAGCATGCCGCGGTGAATACGTTCCCGGGCCTTGTACACACCGCCCGTCACACCATGGGAGTTGGTTTGACCTTAAGCCGGTGAGCGAACCGCAAGGACGCAGCCGACCACGGTCGGGTCAGCGACTGGG"
]
class TestDoubleHelix(unittest.TestCase):
    def main(self):
        n = len(seqs)
        output_matrix = [["" for _ in range(n)] for _ in range(n)]
        for i in range(n):
            output_matrix[i][i] = 0
            for j in range(i + 1, n):
                dist = gps.double_helix_distance(seqs[i],seqs[j])
                output_matrix[i][j] = dist
                output_matrix[j][i] = dist
                #diff = abs(sim - float(sims[i][j]))
                #self.assertLessEqual(diff, 1e-10)
        print(output_matrix)

if __name__ == '__main__':
    test = TestDoubleHelix()
    test.main()